<?xml version="1.0" encoding="UTF-8"?>

<!--
  Ant build file for configuring cmake and building the PROJ-JNI native code.
  This Ant task is designed for invocation from Maven; there is few reason to
  invoke this file directly (the command lines documented in `CMakeLists.txt`
  should work as well).
-->

<project name="CMake" default="build" basedir="${target.directory}">
  <!--
    Check what has been already done. There is two steps to check:
    whether CMake has been configured and whether the binary has been built.
    In all cases the generated files are located in `target` sub-directories;
    we do not create any file outside that directory.
  -->
  <target name="init">
    <fail unless="cmake.subdir">The properties specifying directories are not set.</fail>
    <available property="cmake.configured" file="${cmake.subdir}/Makefile"/>
    <available property="projjni.compiled" file="classes/org/osgeo/proj/libproj-binding.so"/>
    <available property="projjni.compiled" file="classes/org/osgeo/proj/libproj-binding.dylib"/>
    <available property="projjni.compiled" file="classes/org/osgeo/proj/proj-binding.dll"/>
  </target>
  <!--
    All CMake configuration files will be stored in the `target/cmake` directory.
    Because that directory is deleted evertime `mvn clean` is executed, we need
    to recreate and reconfigure when that directory does not exist or does not
    contain the generated Makefile.
  -->
  <target name="configure" depends="init" unless="cmake.configured">
    <mkdir dir="${cmake.subdir}"/>
    <exec executable="cmake" dir="${cmake.subdir}" failonerror="true">
      <arg line="${source.directory}"/>
    </exec>
  </target>
  <!--
    Build the binary (`libproj-binding.so` or `proj-binding.dll`) only if it does not exist.
    The destination directory is specified in the `CMakeLists.txt` file and should be equal
    to the directory of files checked by `projjni.compiled` property.
  -->
  <target name="build" depends="configure" unless="projjni.compiled">
    <exec executable="cmake" failonerror="true">
      <arg line="--build ${cmake.subdir}"/>
    </exec>
    <!--
      At this point the native file (".so" or ".dll") has been written in "classes/org/â€¦/proj/" directory.
      The exact name depends on the platform. The <first> task below locates that file and the <symlink>
      task creates a symbolic link to it in the "target" directory for convenience.
    -->
    <first id="native-binary">
      <fileset dir="classes/org/osgeo/proj" includes="*-binding.*"/>
    </first>
    <basename property="native-binary-filename" file="${toString:native-binary}"/>
    <symlink overwrite="true" resource="${toString:native-binary}"
             link="${basedir}/${native-binary-filename}"/>
  </target>
</project>
